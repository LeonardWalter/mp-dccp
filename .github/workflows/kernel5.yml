name: Compile and Package Kernel v5.10

on:
  push:
    branches:
      - mpdccp_v03_k5.10
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space - 1
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'

      - name: Maximize build space - 2
        run: |
          sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
          sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/lib/jvm || true
          echo "some directories deleted"
          sudo apt install aptitude -y >/dev/null 2>&1
          sudo aptitude purge aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            esl-erlang firefox gfortran-8 gfortran-9 google-chrome-stable \
            google-cloud-sdk imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete libmysqlclient \
            unixodbc-dev yarn chrpath libssl-dev libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
            snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion mongodb-org azure-cli microsoft-edge-stable \
            -y -f >/dev/null 2>&1
          sudo aptitude purge google-cloud-sdk -f -y >/dev/null 2>&1
          sudo aptitude purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
          sudo apt purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
          sudo aptitude purge '~n ^mysql' -f -y >/dev/null 2>&1
          sudo aptitude purge '~n ^php' -f -y >/dev/null 2>&1
          sudo aptitude purge '~n ^dotnet' -f -y >/dev/null 2>&1
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get autoclean -y >/dev/null 2>&1

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: mpdccp_v03_k5.10
          fetch-depth: 1

      - name: Compile Linux Kernel # use a debian docker for kernel-compilation
        run: |
          docker run --name kernel_builder -v ${{ github.workspace }}:/mp-dccp debian:11-slim /bin/bash -c '
            cd /mp-dccp
            apt update
            apt install -y cmake gcc build-essential linux-source bc kmod cpio flex libncurses5-dev libelf-dev libssl-dev dwarves bison rsync python3
            cp sampleconfig .config
            scripts/config --disable DEBUG_INFO
            make -sj$(nproc) bindeb-pkg
            mv ../*.deb .
          '

      - name: Upload .deb files to repository
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-deb-files
          path: ${{ github.workspace }}/*.deb

      - name: Deploy to Release Branch
        shell: "bash"
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git checkout -b release_5
          git rm -r .
          git add *.deb
          git commit -m "Continuous Integration Build Artifacts"
          git push --force origin release_5
